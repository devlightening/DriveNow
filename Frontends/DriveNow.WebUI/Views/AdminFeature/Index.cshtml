@model List<ResultFeatureDto>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/Index.cshtml";
}
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" xintegrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6Yctnug4oO4N0k9q8pLgJ1D3/m3Q7DqPzK6C6" crossorigin="anonymous">
    <style>
        :root {
            --primary-color: #4A90E2;
            --secondary-color: #34495E;
            --card-bg: #FFFFFF;
            --border-color: #EAECEE;
            --shadow-light: 0 4px 12px rgba(0, 0, 0, 0.08);
            --shadow-hover: 0 8px 24px rgba(0, 0, 0, 0.12);
            --success-color: #2ECC71;
            --danger-color: #E74C3C;
            --warning-color: #F39C12;
            --text-color-primary: #34495E;
            --text-color-secondary: #7F8C8D;
        }

        body {
            background-color: #F8F9F9;
            font-family: 'Inter', sans-serif;
        }

        .container-custom {
            max-width: 1200px;
            margin: auto;
            padding: 6rem 1.5rem;
        }

        .page-header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2.5rem;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--text-color-primary);
            margin: 0;
        }

        .btn-add-feature {
            background-color: var(--primary-color);
            color: white;
            padding: 0.8rem 1.8rem;
            border: none;
            border-radius: 12px;
            font-weight: 600;
            transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .btn-add-feature:hover {
                background-color: #3A81D1;
                transform: translateY(-3px);
                box-shadow: 0 6px 16px rgba(74, 144, 226, 0.3);
            }

        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 2rem;
            animation: fadeIn 0.8s ease-out forwards;
        }

        .feature-card {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 2rem;
            box-shadow: var(--shadow-light);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            position: relative;
            overflow: hidden;
            animation: fadeIn 0.8s ease-out forwards;
        }

            .feature-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--shadow-hover);
            }

            .feature-card::before {
                content: '';
                position: absolute;
                top: -5px;
                left: -5px;
                right: -5px;
                height: 5px;
                background: linear-gradient(90deg, #4A90E2, #50C878, #F39C12);
                border-top-left-radius: 16px;
                border-top-right-radius: 16px;
            }

        .feature-icon-container {
            font-size: 2.8rem;
            color: var(--primary-color);
            margin-bottom: 1.5rem;
        }

        .feature-name {
            font-size: 1.6rem;
            font-weight: 600;
            color: var(--text-color-primary);
            margin-bottom: 1rem;
        }

        .card-actions {
            display: flex;
            gap: 10px;
            margin-top: 1.5rem;
        }

        .btn-update, .btn-delete {
            padding: 0.7rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            border: none;
            cursor: pointer;
            transition: background-color 0.2s ease, transform 0.2s ease;
        }

        .btn-update {
            background-color: var(--warning-color);
            color: white;
        }

            .btn-update:hover {
                background-color: #D68910;
                transform: translateY(-2px);
            }

        .btn-delete {
            background-color: var(--danger-color);
            color: white;
        }

            .btn-delete:hover {
                background-color: #C0392B;
                transform: translateY(-2px);
            }

        .modal-content {
            border-radius: 12px;
            box-shadow: var(--shadow-hover);
        }

        .modal-header {
            border-bottom: none;
        }

        .modal-footer {
            border-top: none;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .btn-primary:hover {
                background-color: #3A81D1;
                border-color: #3A81D1;
            }

        .alert-message-container {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1050;
            width: auto;
            min-width: 300px;
            animation: slideInDown 0.5s ease-out forwards;
        }

        .alert-custom {
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        @@keyframes fadeIn {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        @@keyframes slideInDown {
            from

        {
            transform: translateX(-50%) translateY(-100px);
            opacity: 0;
        }

        to {
            transform: translateX(-50%) translateY(0);
            opacity: 1;
        }

        }
    </style>
</head>
<body>
    <div class="container-custom">
        <div class="page-header-container">
            <h2 class="page-title">Vehicle Features</h2>
            <button type="button" class="btn-add-feature" data-bs-toggle="modal" data-bs-target="#createFeatureModal">
                <i class="fas fa-plus"></i> Add New Feature
            </button>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="feature-grid">
                @foreach (var feature in Model)
                {
                    <div class="feature-card" data-feature-id="@feature.FeatureId" data-feature-name="@feature.FeatureName" data-icon-url="@feature.IconUrl">
                        <div class="feature-header">
                            <div class="feature-icon-container">
                                <i class="@feature.IconUrl"></i>
                            </div>
                            <div class="feature-name">@feature.FeatureName</div>
                        </div>
                        <div class="card-actions">
                            <button type="button" class="btn-update" data-bs-toggle="modal" data-bs-target="#updateFeatureModal"
                                    data-feature-id="@feature.FeatureId" data-feature-name="@feature.FeatureName" data-icon-url="@feature.IconUrl">
                                Update
                            </button>
                            <button type="button" class="btn-delete" onclick="showDeleteConfirmation('@feature.FeatureId')">
                                Delete
                            </button>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center p-5 text-color-secondary">
                <p>No features found. Please add a new feature.</p>
            </div>
        }
    </div>

    <div class="modal fade" id="createFeatureModal" tabindex="-1" aria-labelledby="createFeatureModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createFeatureModalLabel">Create New Feature</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="createFeatureForm">
                        <div class="form-group mb-3">
                            <label for="createFeatureNameInput">Feature Name</label>
                            <input type="text" id="createFeatureNameInput" name="FeatureName" class="form-control" placeholder="e.g., Apple CarPlay, ABS, Airbag" required>
                        </div>
                        <div class="form-group">
                            <label for="createIconUrlInput">Icon Class (e.g., fas fa-car)</label>
                            <input type="text" id="createIconUrlInput" name="IconUrl" class="form-control" placeholder="e.g., fas fa-car" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveFeatureBtn">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="updateFeatureModal" tabindex="-1" aria-labelledby="updateFeatureModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateFeatureModalLabel">Update Feature</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="updateFeatureForm">
                        <input type="hidden" id="updateFeatureIdInput">
                        <div class="form-group mb-3">
                            <label for="updateFeatureNameInput">Feature Name</label>
                            <input type="text" id="updateFeatureNameInput" name="FeatureName" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="updateIconUrlInput">Icon Class (e.g., fas fa-car)</label>
                            <input type="text" id="updateIconUrlInput" name="IconUrl" class="form-control" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveUpdateBtn">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    Are you sure you want to delete this feature?
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>

</body>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        var featureToDeleteId = null;

        function showCustomAlert(message, type) {
            const container = document.createElement('div');
            container.className = 'alert-message-container';
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show alert-custom" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
            container.innerHTML = alertHtml;
            document.body.appendChild(container);
            setTimeout(() => {
                container.remove();
            }, 5000);
        }

        function showDeleteConfirmation(id) {
            featureToDeleteId = id;
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
            deleteModal.show();
        }

        function deleteFeature(id) {
            $.ajax({
                url: '/AdminFeature/DeleteFeature/' + id,
                type: 'DELETE',
                success: function (data) {
                    $('#deleteConfirmationModal').modal('hide');
                    showCustomAlert("Feature successfully deleted!", 'success');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    $('#deleteConfirmationModal').modal('hide');
                    showCustomAlert("Error deleting feature: " + xhr.responseText, 'danger');
                }
            });
        }

        $(document).ready(function () {
            $('#saveFeatureBtn').click(function () {
                var featureName = $('#createFeatureNameInput').val();
                var iconUrl = $('#createIconUrlInput').val();

                if (!featureName || !iconUrl) {
                    showCustomAlert('Feature Name and Icon Class are required.', 'warning');
                    return;
                }

                var createFeatureDto = {
                    FeatureName: featureName,
                    IconUrl: iconUrl
                };

                $.ajax({
                    url: '/AdminFeature/CreateFeature',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(createFeatureDto),
                    success: function (data) {
                        $('#createFeatureModal').modal('hide');
                        showCustomAlert("Feature successfully created!", 'success');
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        showCustomAlert("Error creating feature: " + xhr.responseText, 'danger');
                    }
                });
            });

            $('#updateFeatureModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var featureId = button.data('feature-id');
                var featureName = button.data('feature-name');
                var iconUrl = button.data('icon-url');

                var modal = $(this);
                modal.find('#updateFeatureIdInput').val(featureId);
                modal.find('#updateFeatureNameInput').val(featureName);
                modal.find('#updateIconUrlInput').val(iconUrl);
            });

            $('#saveUpdateBtn').click(function () {
                var featureId = $('#updateFeatureIdInput').val();
                var featureName = $('#updateFeatureNameInput').val();
                var iconUrl = $('#updateIconUrlInput').val();

                if (!featureName || !iconUrl) {
                    showCustomAlert('Feature Name and Icon Class are required.', 'warning');
                    return;
                }

                var updateFeatureDto = {
                    FeatureId: featureId,
                    FeatureName: featureName,
                    IconUrl: iconUrl
                };

                $.ajax({
                    url: '/AdminFeature/UpdateFeature',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(updateFeatureDto),
                    success: function (data) {
                        $('#updateFeatureModal').modal('hide');
                        showCustomAlert("Feature successfully updated!", 'success');
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        showCustomAlert("Error updating feature: " + xhr.responseText, 'danger');
                    }
                });
            });

            $('#confirmDeleteBtn').click(function() {
                if (featureToDeleteId) {
                    deleteFeature(featureToDeleteId);
                }
            });
        });
    </script>
}
