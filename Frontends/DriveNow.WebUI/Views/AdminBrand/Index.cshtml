@model List<ResultBrandDto>
@{
    ViewData["Title"] = "Brand Management";
    Layout = "~/Views/AdminLayout/Index.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<style>
    .brand-management-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 30px 20px;
        margin: -15px;
    }

    .brand-container {
        max-width: 1200px;
        margin: 0 auto;
    }

    .brand-header {
        text-align: center;
        margin-bottom: 50px;
    }

        .brand-header h1 {
            font-size: 2.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 8px;
        }

        .brand-header p {
            font-size: 1rem;
            color: #7f8c8d;
        }

    .brand-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 40px;
        background: white;
        padding: 20px 25px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
    }

    .add-brand-btn {
        background: #3498db;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-size: 0.95rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .add-brand-btn:hover {
            background: #2980b9;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
            color: white;
            text-decoration: none;
        }

    .search-box {
        position: relative;
        flex: 1;
        max-width: 350px;
        margin: 0 25px;
    }

    .search-input {
        width: 100%;
        padding: 12px 20px 12px 45px;
        border: 1px solid #e0e6ed;
        border-radius: 8px;
        background: #f8f9fa;
        font-size: 0.95rem;
        outline: none;
        transition: all 0.3s ease;
    }

        .search-input:focus {
            background: white;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

    .search-icon {
        position: absolute;
        left: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: #95a5a6;
        font-size: 0.9rem;
    }

    .brand-count {
        color: #7f8c8d;
        font-size: 0.95rem;
        font-weight: 500;
    }

    .brand-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
    }

    .brand-card {
        background: white;
        border-radius: 12px;
        padding: 30px;
        text-align: center;
        transition: all 0.3s ease;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
        border: 1px solid #f1f3f4;
    }

        .brand-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
            border-color: #e9ecef;
        }

    .brand-logo {
        width: 80px;
        height: 80px;
        margin: 0 auto 20px;
        background: #f8f9fa;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #e9ecef;
        overflow: hidden;
    }

        .brand-logo img {
            width: 60px;
            height: 60px;
            object-fit: contain;
        }

        .brand-logo i {
            font-size: 2rem;
            color: #95a5a6;
        }

    .brand-name {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 25px;
        word-break: break-word;
    }

    .brand-actions {
        display: flex;
        justify-content: center;
        gap: 8px;
        flex-wrap: wrap;
    }

    .action-btn {
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        min-width: 70px;
        justify-content: center;
    }

    .view-btn {
        background: #2ecc71;
        color: white;
    }

        .view-btn:hover {
            background: #27ae60;
            transform: translateY(-1px);
            box-shadow: 0 3px 8px rgba(46, 204, 113, 0.3);
            color: white;
            text-decoration: none;
        }

    .edit-btn {
        background: #f39c12;
        color: white;
    }

        .edit-btn:hover {
            background: #e67e22;
            transform: translateY(-1px);
            box-shadow: 0 3px 8px rgba(243, 156, 18, 0.3);
            color: white;
            text-decoration: none;
        }

    .delete-btn {
        background: #e74c3c;
        color: white;
    }

        .delete-btn:hover {
            background: #c0392b;
            transform: translateY(-1px);
            box-shadow: 0 3px 8px rgba(231, 76, 60, 0.3);
        }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
    }

        .empty-state i {
            font-size: 3rem;
            color: #bdc3c7;
            margin-bottom: 20px;
        }

        .empty-state h3 {
            color: #2c3e50;
            font-size: 1.4rem;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .empty-state p {
            color: #7f8c8d;
            font-size: 1rem;
        }

    @@media (max-width: 768px) {
        .brand-controls

    {
        flex-direction: column;
        gap: 15px;
    }

    .search-box {
        max-width: 100%;
        margin: 0;
    }

    .brand-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .brand-header h1 {
        font-size: 1.8rem;
    }

    .brand-management-container {
        padding: 20px 15px;
        margin: -10px;
    }

    .brand-actions {
        gap: 6px;
    }

    .action-btn {
        font-size: 0.8rem;
        padding: 7px 12px;
    }

    }

    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .brand-card {
        animation: fadeInUp 0.5s ease forwards;
    }

        .brand-card:nth-child(2n) {
            animation-delay: 0.1s;
        }

        .brand-card:nth-child(3n) {
            animation-delay: 0.2s;
        }
</style>

<div class="brand-management-container">
    <div class="brand-container">
        <!-- Header -->
        <div class="brand-header">
            <h1><i class="fas fa-tags"></i> Brand Management</h1>
            <p>Manage your automotive brands</p>
        </div>

        <!-- Controls -->
        <div class="brand-controls">
            <a href="@Url.Action("Create", "Brand")" class="add-brand-btn">
                <i class="fas fa-plus"></i>
                Add Brand
            </a>

            <div class="search-box">
                <i class="fas fa-search search-icon"></i>
                <input type="text" class="search-input" placeholder="Search brands..." id="searchInput">
            </div>

            <div class="brand-count">
                <i class="fas fa-list"></i>
                <span id="brandCount">@Model.Count</span> Brands
            </div>
        </div>

        <!-- Brand Grid -->
        @if (Model != null && Model.Any())
        {
            <div class="brand-grid" id="brandGrid">
                @foreach (var brand in Model)
                {
                    <div class="brand-card" data-brand="@brand.BrandName.ToLower()">
                        <div class="brand-logo">
                            @if (!string.IsNullOrEmpty(brand.LogoUrl))
                            {
                                <img src="@brand.LogoUrl" alt="@brand.BrandName Logo" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <i class="fas fa-car" style="display: none;"></i>
                            }
                            else
                            {
                                <i class="fas fa-car"></i>
                            }
                        </div>
                        <div class="brand-name">@brand.BrandName</div>
                        <div class="brand-actions">
                            <a href="@Url.Action("Details", "Brand", new { id = brand.BrandId })" class="action-btn view-btn">
                                <i class="fas fa-eye"></i>
                                View
                            </a>
                            <a href="@Url.Action("Edit", "Brand", new { id = brand.BrandId })" class="action-btn edit-btn">
                                <i class="fas fa-edit"></i>
                                Edit
                            </a>
                            <button class="action-btn delete-btn" onclick="confirmDelete('@brand.BrandId', '@brand.BrandName')">
                                <i class="fas fa-trash"></i>
                                Delete
                            </button>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-inbox"></i>
                <h3>No Brands Found</h3>
                <p>Start by adding your first brand to the system.</p>
            </div>
        }

        <!-- Dynamic Empty State (for search results) -->
        <div class="empty-state" id="emptyState" style="display: none;">
            <i class="fas fa-search"></i>
            <h3>No Brands Found</h3>
            <p>No brands match your search criteria.</p>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const brandGrid = document.getElementById('brandGrid');
        const brandCards = document.querySelectorAll('.brand-card');
        const brandCount = document.getElementById('brandCount');
        const emptyState = document.getElementById('emptyState');
        const totalBrands = @Model.Count;

        if (searchInput && brandGrid) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase().trim();
                let visibleCount = 0;

                brandCards.forEach(card => {
                    const brandName = card.getAttribute('data-brand');

                    if (brandName && brandName.includes(searchTerm)) {
                        card.style.display = 'block';
                        visibleCount++;
                    } else {
                        card.style.display = 'none';
                    }
                });

                brandCount.textContent = visibleCount;

                if (visibleCount === 0 && brandCards.length > 0) {
                    brandGrid.style.display = 'none';
                    emptyState.style.display = 'block';
                    emptyState.innerHTML = `
                        <i class="fas fa-search"></i>
                        <h3>No Brands Found</h3>
                        <p>No brands match "${searchTerm}"</p>
                    `;
                } else {
                    brandGrid.style.display = 'grid';
                    emptyState.style.display = 'none';
                }
            });
        }

        // Add entrance animations
        const cards = document.querySelectorAll('.brand-card');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.05}s`;
        });
    });

    function confirmDelete(brandId, brandName) {
        if (confirm(`Delete "${brandName}"?`)) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("Delete", "Brand")';

            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token.value;
                form.appendChild(tokenInput);
            }

            const idInput = document.createElement('input');
            idInput.type = 'hidden';
            idInput.name = 'id';
            idInput.value = brandId;
            form.appendChild(idInput);

            document.body.appendChild(form);
            form.submit();
        }
    }
</script>

@section Scripts {
    <script>
        console.log('Brand Index loaded');
    </script>
}