@model CreateBrandDto
@{
    ViewData["Title"] = "CreateBrand";
    Layout = "~/Views/AdminLayout/Index.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<style>
    .create-brand-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 100px 20px;
        margin: -15px;
    }

    .brand-container {
        max-width: 600px;
        margin: 0 auto;
    }

    .brand-header {
        text-align: center;
        margin-bottom: 40px;
    }

        .brand-header h1 {
            font-size: 2.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 8px;
        }

        .brand-header p {
            font-size: 1rem;
            color: #7f8c8d;
        }

    .brand-form-card {
        background: white;
        border-radius: 12px;
        padding: 40px;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
        border: 1px solid #f1f3f4;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 8px;
        font-size: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #e0e6ed;
        border-radius: 8px;
        background: #f8f9fa;
        font-size: 0.95rem;
        outline: none;
        transition: all 0.3s ease;
        box-sizing: border-box;
    }

        .form-control:focus {
            background: white;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .form-control:valid {
            border-color: #2ecc71;
            background: #f8fff9;
        }

    .form-help {
        font-size: 0.85rem;
        color: #7f8c8d;
        margin-top: 5px;
        display: flex;
        align-items: center;
        gap: 6px;
    }

        .form-help i {
            color: #3498db;
        }

        .form-help a {
            color: #3498db;
            text-decoration: none;
            font-weight: 500;
        }

            .form-help a:hover {
                text-decoration: underline;
            }

    .logo-preview {
        width: 80px;
        height: 80px;
        margin: 15px auto 0;
        background: #f8f9fa;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #e9ecef;
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .logo-preview img {
            width: 60px;
            height: 60px;
            object-fit: contain;
        }

        .logo-preview i {
            font-size: 2rem;
            color: #95a5a6;
        }

        .logo-preview.has-image {
            border-color: #2ecc71;
            background: #f8fff9;
        }

    .form-actions {
        display: flex;
        gap: 12px;
        margin-top: 35px;
        justify-content: center;
    }

    .btn {
        padding: 12px 28px;
        border: none;
        border-radius: 8px;
        font-size: 0.95rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        min-width: 120px;
        justify-content: center;
    }

    .btn-primary {
        background: #3498db;
        color: white;
    }

        .btn-primary:hover {
            background: #2980b9;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
        }

    .btn-secondary {
        background: #95a5a6;
        color: white;
    }

        .btn-secondary:hover {
            background: #7f8c8d;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(149, 165, 166, 0.3);
            color: white;
            text-decoration: none;
        }

    .message-container {
        text-align: center;
        margin-bottom: 25px;
        padding: 15px;
        border-radius: 8px;
        display: none;
        font-weight: 600;
        font-size: 0.95rem;
    }

        .message-container.success {
            background: #e6ffed;
            border: 1px solid #b7e3c9;
            color: #2f855a;
        }

        .message-container.error {
            background: #fff5f5;
            border: 1px solid #fed7d7;
            color: #c53030;
        }

    .field-validation-error {
        color: #e74c3c;
        font-size: 0.85rem;
        margin-top: 5px;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .field-validation-error:before {
            content: "⚠";
            font-size: 0.8rem;
        }

    .required {
        color: #e74c3c;
    }

    @@media (max-width: 768px) {
        .brand-container {
            max-width: 100%;
        }

        .brand-form-card {
            padding: 30px 25px;
        }

        .brand-header h1 {
            font-size: 1.8rem;
        }

        .form-actions {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }

        .create-brand-container {
            padding: 20px 15px;
            margin: -10px;
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .brand-form-card {
        animation: fadeInUp 0.5s ease forwards;
    }
</style>

<div class="create-brand-container">
    <div class="brand-container">
        <!-- Header -->
        <div class="brand-header">
            <h1><i class="fas fa-plus-circle"></i> Create Brand</h1>
            <p>Add a new automotive brand to your system</p>
        </div>

        <!-- Form Card -->
        <div class="brand-form-card">
            <div id="messageContainer" class="message-container"></div>
            @* The form now submits via JavaScript *@
            <form id="createBrandForm">
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(model => model.BrandName, new { @class = "form-label" })
                    <span class="required">*</span>
                    @Html.EditorFor(model => model.BrandName, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                @placeholder = "Enter brand name (e.g., BMW, Mercedes, Toyota)",
                                @required = "required"
                            }
                        })
                    @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "field-validation-error" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LogoUrl, new { @class = "form-label" })
                    @Html.EditorFor(model => model.LogoUrl, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                @placeholder = "https://example.com/logo.png",
                                @type = "url",
                                @id = "logoUrlInput"
                            }
                        })
                    <div class="form-help">
                        <i class="fas fa-info-circle"></i>
                        You can find brand logos at <a href="https://www.carlogos.org/" target="_blank">carlogos.org</a>
                    </div>
                    @Html.ValidationMessageFor(model => model.LogoUrl, "", new { @class = "field-validation-error" })
                    <div class="logo-preview" id="logoPreview">
                        <i class="fas fa-car"></i>
                    </div>
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <i class="fas fa-save"></i>
                        Create Brand
                    </button>
                    <a href="@Url.Action("Index", "AdminBrand")" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i>
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const logoUrlInput = document.getElementById('logoUrlInput');
        const logoPreview = document.getElementById('logoPreview');
        const form = document.getElementById('createBrandForm');
        const messageContainer = document.getElementById('messageContainer');
        const submitBtn = document.getElementById('submitBtn');

        // Handles logo preview
        if (logoUrlInput && logoPreview) {
            logoUrlInput.addEventListener('input', function() {
                const url = this.value.trim();
                if (url && isValidUrl(url)) {
                    const img = new Image();
                    img.onload = function() {
                        logoPreview.innerHTML = `<img src="${url}" alt="Brand Logo">`;
                        logoPreview.classList.add('has-image');
                    };
                    img.onerror = function() {
                        resetLogoPreview();
                    };
                    img.src = url;
                } else {
                    resetLogoPreview();
                }
            });

            if (logoUrlInput.value) {
                logoUrlInput.dispatchEvent(new Event('input'));
            }
        }

        function resetLogoPreview() {
            logoPreview.innerHTML = '<i class="fas fa-car"></i>';
            logoPreview.classList.remove('has-image');
        }

        function isValidUrl(string) {
            try {
                new URL(string);
                return true;
            } catch (_) {
                return false;
            }
        }

        // Handles form submission via JavaScript to send JSON
        if (form) {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();

                // Validate Brand Name
                const brandNameInput = document.querySelector('input[name="BrandName"]');
                const brandName = brandNameInput.value.trim();

                if (!brandName) {
                    showMessage('Brand name is required.', 'error');
                    brandNameInput.focus();
                    return;
                }

                // Show loading state
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Creating...';
                submitBtn.disabled = true;

                // Get form data
                const formData = new FormData(form);
                const brandData = {
                    brandName: formData.get('BrandName'),
                    logoUrl: formData.get('LogoUrl')
                };

                try {
                    const response = await fetch('@Url.Action("CreateBrand", "AdminBrand")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': formData.get('__RequestVerificationToken')
                        },
                        body: JSON.stringify(brandData)
                    });

                    const result = await response.json();

                    if (response.ok) {
                        showMessage(result.message || 'Brand successfully created.', 'success');
                        setTimeout(() => {
                            window.location.href = '@Url.Action("Index", "AdminBrand")';
                        }, 1000); 
                    } else {
                        showMessage(result.message || 'Error creating the brand.', 'error');
                    }
                } catch (error) {
                    console.error('Submission error:', error);
                    showMessage('An unexpected error occurred. Please try again.', 'error');
                } finally {
                    submitBtn.innerHTML = '<i class="fas fa-save"></i> Create Brand';
                    submitBtn.disabled = false;
                }
            });
        }

        // Function to display messages in the custom container
        function showMessage(message, type) {
            messageContainer.textContent = message;
            messageContainer.className = `message-container show ${type}`;
        }
    });

</script>
