@using DriveNow.Dtos.BannerDtos
@using Newtonsoft.Json;
@model List<ResultBannerDto>

<div class="hero-wrap ftco-degree-bg" style="background-image: url('/carbook-master/images/bg_1.jpg');" data-stellar-background-ratio="0.5">
    <div class="overlay"></div>
    <div class="container">
        <div class="row no-gutters slider-text justify-content-start align-items-center justify-content-center">
            <div class="col-lg-8 ftco-animate">
                <div class="text w-100 text-center mb-md-5 pb-md-5">
                    <h1 class="mb-4" id="banner-title"></h1>
                    <p style="font-size: 18px;" id="banner-description"></p>
                    <a href="#" id="banner-video-url" class="icon-wrap popup-vimeo d-flex align-items-center mt-4 justify-content-center">
                        <div class="icon d-flex align-items-center justify-content-center">
                            <span class="ion-ios-play"></span>
                        </div>
                        <div class="heading-title ml-5">
                            <span id="banner-video-description"></span>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script id="banner-data" type="application/json">
    @Html.Raw(JsonConvert.SerializeObject(Model))
</script>

<script>
    let banners = [];
    try {
        const bannerDataElement = document.getElementById('banner-data');
        if (bannerDataElement && bannerDataElement.textContent) {
            banners = JSON.parse(bannerDataElement.textContent);
        }
    } catch (e) {
        console.error("Failed to parse banner data:", e);
        // Hata durumunda boş bir diziye düşerek uygulamanın çökmesini engeller.
        banners = [];
    }

    let currentBannerIndex = 0;
    const bannerTitle = document.getElementById('banner-title');
    const bannerDescription = document.getElementById('banner-description');
    const bannerVideoUrl = document.getElementById('banner-video-url');
    const bannerVideoDescription = document.getElementById('banner-video-description');

    // Bu fonksiyon banner içeriğini günceller.
    function updateBannerContent() {
        if (banners.length === 0) {
            console.warn("No banners available to display.");
            return;
        }

        const currentBanner = banners[currentBannerIndex];

        bannerTitle.textContent = currentBanner.Title;
        bannerDescription.textContent = currentBanner.Description;
        bannerVideoUrl.href = currentBanner.VideoUrl;
        bannerVideoDescription.textContent = currentBanner.VideoDescription;

        // Bir sonraki bannera geçiş için indexi artır.
        currentBannerIndex = (currentBannerIndex + 1) % banners.length;
    }

    // Sayfa yüklendiğinde ve ardından 2 dakikada bir içeriği günceller.
    document.addEventListener('DOMContentLoaded', () => {
        if (banners.length > 0) {
            updateBannerContent();
            setInterval(updateBannerContent, 10000); // 120000 ms = 2 dakika
        }
    });
</script>
