@using DriveNow.Dtos.SocialMediaDtos
@model List<ResultSocialMediaDto>
@{
    ViewData["Title"] = "Social Media";
    Layout = "~/Views/AdminLayout/Index.cshtml";
    var total = Model?.Count ?? 0;

    string Letter(string? s)
        => string.IsNullOrWhiteSpace(s) ? "S" : s!.Trim()[0].ToString().ToUpper();
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Sadece küçük UI ikonları için -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        :root {
            --ink: #0f172a;
            --muted: #64748b;
            --bg: #f8fafc;
            --card: #fff;
            --border: #e5e7eb;
            --primary: #4A90E2;
            --primary-d: #3A81D1;
            --danger: #EF4444;
            --radius: 16px;
            --shadow: 0 6px 18px rgba(0,0,0,.08);
            --shadow-lg: 0 14px 40px rgba(0,0,0,.10);
        }

        body {
            background: var(--bg);
            color: var(--ink);
            font-family: Inter,system-ui,-apple-system,"Segoe UI",Roboto,Arial
        }

        .wrap {
            max-width: 1100px;
            margin: 0 auto;
            padding: 48px 16px
        }

        .head {
            background: #fff;
            border: 1px solid var(--border);
            border-radius: 18px;
            padding: 14px 16px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: var(--shadow)
        }

            .head h2 {
                margin: 0;
                display: flex;
                gap: .6rem;
                align-items: center;
                font-weight: 800;
            }

        .stat {
            background: linear-gradient(135deg,#10b981,#08916a);
            color: #fff;
            padding: .45rem .8rem;
            border-radius: 12px;
            display: flex;
            gap: .45rem;
            align-items: center;
            font-weight: 800
        }

        .controls {
            display: grid;
            grid-template-columns: 1fr auto auto;
            gap: .75rem;
            margin: 14px 0 18px;
            background: #fff;
            border: 1px solid var(--border);
            border-radius: 14px;
            padding: 12px;
            box-shadow: var(--shadow)
        }

        .search {
            position: relative
        }

            .search i {
                position: absolute;
                left: 12px;
                top: 50%;
                transform: translateY(-50%);
                color: #9aa4b2
            }

        #q {
            width: 100%;
            padding: .8rem 1rem .8rem 2.5rem;
            border: 1px solid var(--border);
            border-radius: 12px;
            background: #fff
        }

        .btn-clear {
            background: #eef2ff;
            border: 1px solid #dfe3ff;
            color: #4453d1;
            border-radius: 12px;
            font-weight: 700;
            padding: .7rem 1rem
        }

        .btn-new {
            background: linear-gradient(135deg,var(--primary),var(--primary-d));
            border: none;
            color: #fff;
            border-radius: 12px;
            font-weight: 800;
            padding: .7rem 1rem
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill,minmax(280px,1fr));
            gap: 1rem
        }

        .cardx {
            background: var(--card);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 14px;
            display: flex;
            gap: 12px;
            align-items: flex-start;
            transition: transform .18s ease, box-shadow .18s ease;
        }

            .cardx:hover {
                transform: translateY(-2px);
                box-shadow: var(--shadow-lg)
            }
        /* BRAND İKON YOK – sade harf avatar */
        .avatar {
            width: 54px;
            height: 54px;
            border-radius: 50%;
            display: grid;
            place-items: center;
            flex: 0 0 54px;
            background: linear-gradient(135deg,#eef2ff,#e2e8ff);
            color: #1e3a8a;
            font-size: 20px;
            font-weight: 900;
            border: 1px solid #e6eaff;
        }

        .card-bd {
            flex: 1
        }

        .name {
            font-weight: 800;
            font-size: 1.05rem
        }

        .url {
            margin-top: .15rem
        }

            .url a {
                color: #2563eb;
                text-decoration: none;
                word-break: break-all
            }

        .meta-note {
            color: #8a93a3;
            font-size: .82rem;
            margin-top: .25rem
        }

        .actions {
            display: flex;
            gap: .5rem;
            margin-top: .65rem
        }

        .btn-ghost {
            background: #fff;
            border: 1px solid var(--border);
            border-radius: 10px;
            padding: .45rem .9rem;
            font-weight: 700
        }

        .btn-dangerx {
            background: linear-gradient(135deg,var(--danger),#dc2626);
            border: none;
            color: #fff;
            border-radius: 10px;
            padding: .45rem .9rem;
            font-weight: 800
        }

        .empty {
            border: 1px solid var(--border);
            background: #fff;
            border-radius: 16px;
            padding: 2.2rem 1rem;
            text-align: center;
            color: var(--muted);
            box-shadow: var(--shadow)
        }

        .modal-content {
            border-radius: 16px;
            border: 1px solid var(--border)
        }

        .modal-hd {
            background: linear-gradient(135deg,var(--primary),var(--primary-d));
            color: #fff;
            font-weight: 800;
            padding: 12px 16px
        }

        .lbl {
            font-weight: 700;
            margin: .35rem 0
        }

        .inp {
            width: 100%;
            border: 1px solid var(--border);
            border-radius: 12px;
            padding: .75rem 1rem;
            background: #fff
        }

        .hint {
            color: #6b7280;
            font-size: .85rem;
            margin-top: .25rem
        }

        .btn-save {
            background: linear-gradient(135deg,var(--primary),var(--primary-d));
            color: #fff;
            border: none;
            border-radius: 12px;
            padding: .6rem 1rem;
            font-weight: 800
        }

        .btn-cancel {
            background: #fff;
            border: 1px solid var(--border);
            border-radius: 12px;
            padding: .6rem 1rem;
            font-weight: 700
        }
    </style>
</head>

<div class="wrap">
    <div class="head">
        <h2><i class="fa-solid fa-share-nodes text-primary"></i> Social Media</h2>
        <div class="stat"><i class="fa-solid fa-database"></i> <span id="count">@total</span> records</div>
    </div>

    <div class="controls">
        <div class="search">
            <i class="fa-solid fa-magnifying-glass"></i>
            <input id="q" placeholder="Search by name or URL…">
        </div>
        <button class="btn btn-clear" id="btnClear"><i class="fa-solid fa-eraser me-1"></i> Clear</button>
        <button class="btn btn-new" data-bs-toggle="modal" data-bs-target="#createModal"><i class="fa-solid fa-plus me-1"></i> New</button>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="grid" id="grid">
            @foreach (var sm in Model.OrderBy(x => x.SocialMediaName))
            {
                var letter = Letter(sm.SocialMediaName);
                <div class="cardx"
                     data-id="@sm.SocialMediaId"
                     data-name="@((sm.SocialMediaName ?? "").ToLower())"
                     data-url="@((sm.SocialMediaUrl ?? "").ToLower())"
                     data-icon="@((sm.IconUrl ?? "").ToLower())">
                    <div class="avatar" aria-hidden="true">@letter</div>
                    <div class="card-bd">
                        <div class="name">@sm.SocialMediaName</div>
                        @if (!string.IsNullOrWhiteSpace(sm.SocialMediaUrl))
                        {
                            <div class="url"><a href="@sm.SocialMediaUrl" target="_blank">@sm.SocialMediaUrl</a></div>
                        }
                        @* icon class sadece bilgi amaçlı, ekranda FA brand çizilmez *@
                        @if (!string.IsNullOrWhiteSpace(sm.IconUrl))
                        {
                            <div class="meta-note">Icon class: <code>@sm.IconUrl</code></div>
                        }
                        <div class="actions">
                            <button class="btn btn-ghost btnEdit"
                                    data-bs-toggle="modal" data-bs-target="#editModal"
                                    data-id="@sm.SocialMediaId"
                                    data-name="@sm.SocialMediaName"
                                    data-url="@sm.SocialMediaUrl"
                                    data-icon="@sm.IconUrl">
                                <i class="fa-regular fa-pen-to-square me-1"></i> Edit
                            </button>
                            <button class="btn btn-dangerx btnDel"
                                    data-bs-toggle="modal" data-bs-target="#deleteModal"
                                    data-id="@sm.SocialMediaId"
                                    data-name="@sm.SocialMediaName">
                                <i class="fa-regular fa-trash-can me-1"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div id="empty" class="empty" style="display:none">
            <i class="fa-regular fa-face-frown fa-2x mb-2"></i>
            <div>No matching items.</div>
        </div>
    }
    else
    {
        <div class="empty">
            <i class="fa-solid fa-share-nodes fa-2x mb-2"></i>
            <div>No social media links yet.</div>
            <div class="mt-3">
                <button class="btn btn-new" data-bs-toggle="modal" data-bs-target="#createModal"><i class="fa-solid fa-plus me-1"></i> Create First</button>
            </div>
        </div>
    }
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-hd"><i class="fa-solid fa-plus me-2"></i> New Social Media</div>
            <div class="modal-body">
                <label class="lbl" for="cName">Name</label>
                <input id="cName" class="inp" placeholder="e.g. Instagram" />
                <label class="lbl mt-2" for="cUrl">URL</label>
                <input id="cUrl" class="inp" placeholder="https://www.instagram.com/yourpage" />
                <label class="lbl mt-2" for="cIcon">Icon class (Font Awesome)</label>
                <input id="cIcon" class="inp" placeholder="fa-brands fa-instagram" />
                <div class="hint">Örnekler: <code>fa-brands fa-facebook</code>, <code>fa-brands fa-x-twitter</code>, <code>fa-brands fa-linkedin</code></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-cancel" data-bs-dismiss="modal">Cancel</button>
                <button class="btn btn-save" id="btnSaveCreate"><i class="fa-solid fa-floppy-disk me-1"></i> Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-hd" style="background:linear-gradient(135deg,#f59e0b,#d97706)"><i class="fa-solid fa-pen-to-square me-2"></i> Edit Social Media</div>
            <div class="modal-body">
                <input type="hidden" id="eId" />
                <label class="lbl" for="eName">Name</label>
                <input id="eName" class="inp" />
                <label class="lbl mt-2" for="eUrl">URL</label>
                <input id="eUrl" class="inp" />
                <label class="lbl mt-2" for="eIcon">Icon class (Font Awesome)</label>
                <input id="eIcon" class="inp" />
                <div class="hint">FA sınıfını aynen yaz: <code>fa-brands fa-...</code></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-cancel" data-bs-dismiss="modal">Cancel</button>
                <button class="btn btn-save" id="btnSaveEdit"><i class="fa-solid fa-floppy-disk me-1"></i> Update</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            <div class="modal-hd" style="background:linear-gradient(135deg,#ef4444,#dc2626)"><i class="fa-solid fa-triangle-exclamation me-2"></i> Delete</div>
            <div class="modal-body">
                <input type="hidden" id="delId" />
                <p class="mb-0">Delete <b id="delName"></b> ?</p>
                <small class="text-danger">This action cannot be undone.</small>
            </div>
            <div class="modal-footer">
                <button class="btn btn-cancel" data-bs-dismiss="modal">Cancel</button>
                <button class="btn btn-dangerx" id="btnConfirmDelete"><i class="fa-regular fa-trash-can me-1"></i> Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        (()=>{

          const grid=document.getElementById('grid');
          const empty=document.getElementById('empty');
          const q=document.getElementById('q');
          const btnClear=document.getElementById('btnClear');
          const count=document.getElementById('count');

          const btnSaveCreate=document.getElementById('btnSaveCreate');
          const btnSaveEdit=document.getElementById('btnSaveEdit');
          const btnConfirmDelete=document.getElementById('btnConfirmDelete');

          const eId=document.getElementById('eId');
          const eName=document.getElementById('eName');
          const eUrl=document.getElementById('eUrl');
          const eIcon=document.getElementById('eIcon');

          const delId=document.getElementById('delId');
          const delName=document.getElementById('delName');

          function filter(){
            if(!grid) return;
            const query=(q?.value||'').trim().toLowerCase();
            let visible=0;
            [...grid.children].forEach(card=>{
              const name=card.getAttribute('data-name')||'';
              const url =card.getAttribute('data-url')||'';
              const icon=card.getAttribute('data-icon')||'';
              const ok = !query || name.includes(query) || url.includes(query) || icon.includes(query);
              card.style.display = ok ? '' : 'none';
              if(ok) visible++;
            });
            if(count) count.textContent=visible;
            if(empty) empty.style.display = visible ? 'none':'block';
            if(grid) grid.style.display = visible ? 'grid':'none';
          }

          q?.addEventListener('input', filter);
          btnClear?.addEventListener('click', ()=>{ q.value=''; filter(); });
          document.addEventListener('DOMContentLoaded', filter);

          // Fill edit & delete modals
          document.addEventListener('click', (ev)=>{
            const ebtn=ev.target.closest('.btnEdit');
            if(ebtn){
              eId.value   = ebtn.dataset.id;
              eName.value = ebtn.dataset.name || '';
              eUrl.value  = ebtn.dataset.url  || '';
              eIcon.value = ebtn.dataset.icon || '';
            }
            const dbtn=ev.target.closest('.btnDel');
            if(dbtn){
              delId.value   = dbtn.dataset.id;
              delName.textContent = dbtn.dataset.name || 'this item';
            }
          });

          // CREATE
          btnSaveCreate?.addEventListener('click', async ()=>{
            const payload={
              SocialMediaName: (document.getElementById('cName').value||'').trim(),
              SocialMediaUrl:  (document.getElementById('cUrl').value||'').trim(),
              IconUrl:         (document.getElementById('cIcon').value||'').trim()
            };
            if(!payload.SocialMediaName){ alert('Name is required'); return; }
            const btn=btnSaveCreate, txt=btn.innerHTML;
            try{
              btn.disabled=true; btn.innerHTML='<i class="fa-solid fa-spinner fa-spin me-1"></i> Saving...';
              const res=await fetch('/Admin/AdminSocialMedia/CreateSocialMedia',{
                method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(payload)
              });
              const data=await res.json().catch(()=>({}));
              if(res.ok && data.success){
                bootstrap.Modal.getInstance(document.getElementById('createModal'))?.hide();
                setTimeout(()=>location.reload(),350);
              }else{
                alert(data.message || 'Create failed');
              }
            }catch{ alert('Request failed'); }
            finally{ btn.disabled=false; btn.innerHTML=txt; }
          });

          // UPDATE
          btnSaveEdit?.addEventListener('click', async ()=>{
            const payload={
              SocialMediaId:  eId.value,
              SocialMediaName:(eName.value||'').trim(),
              SocialMediaUrl: (eUrl.value||'').trim(),
              IconUrl:        (eIcon.value||'').trim()
            };
            if(!payload.SocialMediaName){ alert('Name is required'); return; }
            const btn=btnSaveEdit, txt=btn.innerHTML;
            try{
              btn.disabled=true; btn.innerHTML='<i class="fa-solid fa-spinner fa-spin me-1"></i> Updating...';
              const res=await fetch('/Admin/AdminSocialMedia/UpdateSocialMedia',{
                method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(payload)
              });
              const data=await res.json().catch(()=>({}));
              if(res.ok && data.success){
                bootstrap.Modal.getInstance(document.getElementById('editModal'))?.hide();
                setTimeout(()=>location.reload(),350);
              }else{
                alert(data.message || 'Update failed');
              }
            }catch{ alert('Request failed'); }
            finally{ btn.disabled=false; btn.innerHTML=txt; }
          });

          // DELETE
          btnConfirmDelete?.addEventListener('click', async ()=>{
            const id=delId.value; if(!id) return;
            const btn=btnConfirmDelete, txt=btn.innerHTML;
            try{
              btn.disabled=true; btn.innerHTML='<i class="fa-solid fa-spinner fa-spin me-1"></i> Deleting...';
              const res=await fetch(`/Admin/AdminSocialMedia/DeleteSocialMedia?id=${encodeURIComponent(id)}`,{method:'DELETE'});
              const data=await res.json().catch(()=>({}));
              if(res.ok && data.success){
                bootstrap.Modal.getInstance(document.getElementById('deleteModal'))?.hide();
                const row=document.querySelector(`.cardx[data-id="${CSS.escape(id)}"]`);
                if(row){ row.style.opacity='.4'; setTimeout(()=>{ row.remove(); filter(); },180); }
              }else{
                alert(data.message || 'Delete failed');
              }
            }catch{ alert('Request failed'); }
            finally{ btn.disabled=false; btn.innerHTML=txt; }
          });

        })();
    </script>
}
