@using DriveNow.Dtos.ContactDtos
@model List<ResultContactDto>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/Index.cshtml";
    var total = Model?.Count ?? 0;
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #4A90E2;
            --danger: #E74C3C;
            --warning: #F39C12;
            --ink: #34495E;
            --muted: #7F8C8D;
            --card: #fff;
            --shadow: 0 4px 12px rgba(0,0,0,.08);
            --shadow-h: 0 8px 24px rgba(0,0,0,.12);
        }

        .container-custom {
            max-width: 1200px;
            margin: auto;
            padding: 4.5rem 1.5rem
        }

        .page-header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2.2rem
        }

        .page-title {
            font-size: 2rem;
            font-weight: 700;
            color: var(--ink)
        }

        .btn-add {
            background: var(--primary);
            color: #fff;
            border-radius: 12px;
            padding: .8rem 1.6rem;
            font-weight: 600;
            border: none
        }

            .btn-add:hover {
                background: #3A81D1;
                box-shadow: var(--shadow-h)
            }

        .controls {
            display: grid;
            grid-template-columns: 1fr auto;
            gap: .75rem;
            margin-bottom: 1.2rem
        }

        .search-wrap {
            position: relative
        }

            .search-wrap .fa-magnifying-glass {
                position: absolute;
                left: 12px;
                top: 50%;
                transform: translateY(-50%);
                color: #b0b8c1
            }

        #q {
            padding: .8rem .9rem .8rem 2.5rem;
            border-radius: 12px;
            border: 1px solid #e5e7eb
        }

        .contact-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill,minmax(320px,1fr));
            gap: 1.25rem
        }

        .contact-card {
            background: var(--card);
            border-radius: 16px;
            padding: 1.1rem;
            box-shadow: var(--shadow);
            transition: .2s;
            position: relative;
            overflow: hidden;
        }

            .contact-card:hover {
                transform: translateY(-4px);
                box-shadow: var(--shadow-h)
            }

        .c-head {
            display: flex;
            gap: .9rem;
            align-items: flex-start;
            margin-bottom: .25rem
        }

        .avatar {
            width: 44px;
            height: 44px;
            border-radius: 50%;
            display: grid;
            place-items: center;
            background: #eaf2ff;
            color: #2365d1;
            font-weight: 800
        }

        .name {
            font-weight: 700;
            color: #2c3e50
        }

        .meta {
            font-size: .95rem;
            color: #5f6c72;
            display: flex;
            flex-direction: column;
            gap: .25rem
        }

            .meta i {
                width: 18px;
                text-align: center;
                color: #8aa0ad
            }

        .subject {
            font-weight: 700;
            color: #455a64
        }

        .message {
            color: #526171;
            margin: .6rem 0 0
        }

        .time {
            font-size: .875rem;
            color: #7e8b92
        }

        .card-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: .5rem;
            margin-top: .8rem;
            padding-top: .8rem;
            border-top: 1px solid #eef2f4
        }

        .chip {
            background: #f2f5ff;
            border: 1px solid #e6ecff;
            color: #274690;
            border-radius: 999px;
            padding: .25rem .6rem;
            font-size: .75rem;
            font-weight: 700
        }

        .btn-del {
            background: var(--danger);
            color: #fff;
            border: none;
            border-radius: 10px;
            padding: .5rem 1rem
        }

        .btn-clear {
            background: #eef2ff;
            border: 1px solid #dfe6ff;
            color: #4152d0;
            border-radius: 10px;
            padding: .55rem 1rem;
            font-weight: 600
        }

        .empty {
            border: 1px solid #eef2f4;
            border-radius: 14px;
            padding: 2rem;
            text-align: center;
            color: #6b7a81;
            background: #fff
        }

        .modal-content {
            border-radius: 12px
        }

        /* ===== Colorful polish pack (ek) =================================== */
        body {
            background: radial-gradient(900px 480px at 10% -10%, rgba(106,90,249,.06), transparent 60%), radial-gradient(1100px 520px at 110% 0%, rgba(74,144,226,.06), transparent 60%), linear-gradient(180deg, #f6f9ff 0%, #f2fbff 100%);
        }
        /* Arama focus vurgusu */
        #q:focus {
            outline: none;
            border-color: #cdd6ff;
            box-shadow: 0 0 0 4px rgba(108,92,231,.12)
        }

        /* Kart sol renk şeridi ve desen */
        .contact-card::before {
            content: "";
            position: absolute;
            inset: 0 auto 0 0;
            width: 6px;
            background: linear-gradient(180deg,#4A90E2 0%, #6c5ce7 100%);
            opacity: .9;
        }

        .contact-card {
            background: linear-gradient(0deg,rgba(255,255,255,.96),rgba(255,255,255,.96)), url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="6" height="6"><circle cx="3" cy="3" r="1" fill="%23edf2ff"/></svg>') repeat;
        }

        /* Mesaj bölümü hafif panel */
        .message {
            background: linear-gradient(180deg,#fbfdff 0%, #f7faff 100%);
            border: 1px dashed #e3e9f7;
            border-radius: 12px;
            padding: .7rem .85rem;
        }

        /* Daha tok butonlar */
        .btn-add {
            background: linear-gradient(135deg,#4A90E2, #6c5ce7);
            box-shadow: 0 12px 24px rgba(106,90,249,.22);
        }

        .btn-del {
            background: linear-gradient(135deg,#ef4444,#dc2626);
            box-shadow: 0 12px 24px rgba(239,68,68,.22);
        }

        .chip {
            box-shadow: 0 6px 14px rgba(57,73,171,.08)
        }
    </style>
</head>


<div class="container-custom">
    <div class="page-header-container">
        <h2 class="page-title"><i class="fa-regular fa-address-book me-2"></i>Contacts</h2>
        <span class="badge text-bg-success align-self-center p-2 px-3"><i class="fa-solid fa-database me-1"></i><span id="total">@total</span> records</span>
    </div>

    <div class="controls">
        <div class="search-wrap">
            <i class="fa-solid fa-magnifying-glass"></i>
            <input id="q" class="form-control" placeholder="Search by name, email, phone, subject, message...">
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-clear" id="btnClear"><i class="fa-solid fa-eraser me-1"></i>Clear</button>
            <button class="btn btn-add" data-bs-toggle="modal" data-bs-target="#createModal"><i class="fa-solid fa-plus me-1"></i>New Contact</button>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <div id="grid" class="contact-grid">
            @foreach (var c in Model.OrderByDescending(x => x.SendDate))
            {
                var initial = (c.ContactName ?? "?").Trim();
                initial = initial.Length > 0 ? initial.Substring(0, 1).ToUpper() : "?";
                <div class="contact-card"
                     data-name="@((c.ContactName ?? "").ToLower())"
                     data-email="@((c.ContactEmail ?? "").ToLower())"
                     data-phone="@((c.ContactPhone ?? "").ToLower())"
                     data-subject="@((c.ContactSubject ?? "").ToLower())"
                     data-message="@((c.ContactMessage ?? "").ToLower())"
                     data-id="@c.ContactId">
                    <div class="c-head">
                        <div class="avatar">@initial</div>
                        <div class="w-100">
                            <div class="name">@c.ContactName</div>
                            <div class="meta">
                                <div class="d-flex align-items-start"><i class="fa-regular fa-envelope me-2"></i><a class="text-decoration-none text-reset" href="mailto:@c.ContactEmail">@c.ContactEmail</a></div>
                                <div class="d-flex align-items-start"><i class="fa-solid fa-phone me-2"></i><a class="text-decoration-none text-reset" href="tel:@c.ContactPhone">@c.ContactPhone</a></div>
                                <div class="d-flex align-items-start subject"><i class="fa-regular fa-bookmark me-2"></i>@c.ContactSubject</div>
                                <div class="d-flex align-items-start time"><i class="fa-regular fa-clock me-2"></i>@c.SendDate.ToString("dd.MM.yyyy HH:mm")</div>
                            </div>
                        </div>
                    </div>
                    <div class="message">@c.ContactMessage</div>
                    <div class="card-actions">
                        <div class="d-flex gap-2 flex-wrap">
                            <span class="chip"><i class="fa-solid fa-user me-1"></i>@(string.IsNullOrWhiteSpace(c.ContactName) ? "Anonymous" : c.ContactName)</span>
                        </div>
                        <button class="btn btn-del btn-sm" data-id="@c.ContactId" data-name="@c.ContactName" data-bs-toggle="modal" data-bs-target="#deleteModal">
                            <i class="fa-solid fa-trash me-1"></i>Delete
                        </button>
                    </div>
                </div>
            }
        </div>
        <div id="empty" class="empty d-none">
            <i class="fa-regular fa-face-frown me-2"></i>No matching contacts found.
        </div>
    }
    else
    {
        <div class="empty">
            <div class="mb-2"><i class="fa-regular fa-inbox fa-2x"></i></div>
            No contacts yet.
            <div class="mt-3">
                <button class="btn btn-add" data-bs-toggle="modal" data-bs-target="#createModal"><i class="fa-solid fa-plus me-1"></i>Create First Contact</button>
            </div>
        </div>
    }
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Create Contact</h5></div>
            <div class="modal-body">
                <form id="createForm">
                    <div class="row g-3">
                        <div class="col-md-6"><input class="form-control" name="ContactName" placeholder="Full name" required></div>
                        <div class="col-md-6"><input class="form-control" name="ContactEmail" placeholder="Email" type="email"></div>
                        <div class="col-md-6"><input class="form-control" name="ContactPhone" placeholder="Phone"></div>
                        <div class="col-md-6"><input class="form-control" name="ContactSubject" placeholder="Subject"></div>
                        <div class="col-12"><textarea class="form-control" name="ContactMessage" placeholder="Message..." rows="4"></textarea></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="btnCreate" class="btn btn-primary"><i class="fa-solid fa-save me-1"></i>Create</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            <div class="modal-body text-center">
                <input type="hidden" id="delId" />
                <div class="mb-2"><i class="fa-solid fa-triangle-exclamation text-danger"></i></div>
                Delete <b id="delName"></b>?
            </div>
            <div class="modal-footer justify-content-center">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="btnDelete" class="btn btn-danger"><i class="fa-solid fa-trash me-1"></i>Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        /* Search / filter */
        const grid = document.getElementById('grid');
        const empty = document.getElementById('empty');
        const total = document.getElementById('total');
        function applyFilter(){
          if(!grid) return;
          const q = (document.getElementById('q').value||'').toLowerCase().trim();
          let visible = 0;
          [...grid.children].forEach(card=>{
            const ok = !q ||
              card.dataset.name.includes(q) ||
              card.dataset.email.includes(q) ||
              card.dataset.phone.includes(q) ||
              card.dataset.subject.includes(q) ||
              card.dataset.message.includes(q);
            card.style.display = ok ? '' : 'none';
            if(ok) visible++;
          });
          total.textContent = visible;
          empty?.classList.toggle('d-none', visible>0);
          grid.style.display = visible>0 ? 'grid' : 'none';
        }
        $('#q').on('input', applyFilter);
        $('#btnClear').on('click', ()=>{ $('#q').val(''); applyFilter(); });

        /* Create */
        $('#btnCreate').on('click', async function(){
          const form = $('#createForm').serializeArray().reduce((a,i)=>{a[i.name]=i.value;return a;},{});
          if(!form.ContactName){ alert('Name is required.'); return; }
          const btn = this; btn.disabled = true; btn.innerHTML='<i class="fa-solid fa-spinner fa-spin me-1"></i>Saving...';
          try{
            const res = await fetch('/Admin/AdminContact/CreateContact', {
              method:'POST',
              headers:{'Content-Type':'application/json'},
              body: JSON.stringify(form)
            });
            const j = await res.json();
            if(res.ok && j.success){ location.reload(); }
            else alert(j.message || 'Create failed.');
          }catch{ alert('Request failed.'); }
          finally{ btn.disabled=false; btn.innerHTML='<i class="fa-solid fa-save me-1"></i>Create'; }
        });

        /* Open delete modal with data */
        document.addEventListener('click', (e)=>{
          const b = e.target.closest('.btn-del');
          if(!b) return;
          document.getElementById('delId').value = b.dataset.id;
          document.getElementById('delName').textContent = b.dataset.name || 'this contact';
        });

        /* Delete */
        $('#btnDelete').on('click', async function(){
          const id = $('#delId').val();
          const btn = this; btn.disabled=true; btn.innerHTML='<i class="fa-solid fa-spinner fa-spin me-1"></i>Deleting...';
          try{
            const res = await fetch(`/Admin/AdminContact/DeleteContact?id=${id}`, { method:'DELETE' });
            const j = await res.json();
            if(res.ok && j.success){
              // remove card instantly
              const card = grid.querySelector(`[data-id="${id}"]`);
              card?.remove(); applyFilter();
              bootstrap.Modal.getInstance(document.getElementById('deleteModal'))?.hide();
            }else alert(j.message || 'Delete failed.');
          }catch{ alert('Request failed.'); }
          finally{ btn.disabled=false; btn.innerHTML='<i class="fa-solid fa-trash me-1"></i>Delete'; }
        });

        /* init */
        document.addEventListener('DOMContentLoaded', applyFilter);
    </script>
}
